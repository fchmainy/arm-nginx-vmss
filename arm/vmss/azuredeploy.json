{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
            "description": "Name of the VNET."
          }
        },
        "ProdSubnetName": {
        "type": "string",
        "metadata": {
            "description": "Name of the Subnet where is located the private NIC of the Controller."
        }
        },
        "MgtSubnetName": {
        "type": "string",
        "metadata": {
            "description": "Name of the Subnet where is located the private NIC of the Controller."
        }
        },
      "ControllerIP": {
        "type": "string",
        "defaultValue": "10.1.1.4",
        "metadata": {
          "description": "Private IP Address of the Controller."
        }
      },
      "ctrlUserEmail": {
        "type": "string",
        "metadata": {
          "description": "Controller Administrator Email address."
        }
      },
      "ctrlUserPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Controller Administrator password."
        }
      },
      "nginx-repo.crt": {
        "type": "string",
        "metadata": {
          "description": "Base 64 of the nginx-repo.crt."
        }
      },
      "nginx-repo.key": {
        "type": "string",
        "metadata": {
          "description": "Base 64 of the nginx-repo.key."
        }
      },
      "instanceLocation": {
        "type": "string",
        "metadata": {
          "description": "target Location of the instance as defined in the controller."
        }
      },
      "Environment": {
        "type": "string",
        "metadata": {
          "description": "Environment created on the controller for the gateway."
        }
      },
      "gateway": {
        "type": "string",
        "metadata": {
          "description": "dataplane Gateway to be onboarded to."
        }
      },      
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61
      },
      "instanceCount": {
        "type": "int",
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
     "restrictedSrcAddress": {
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        }
    },
    "variables": {
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "longNamingInfix": "[toLower(parameters('vmssName'))]",
      "vmSize": "Standard_D1_v2",
      "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
      "nsgName": "[concat(uniquestring(concat(resourceGroup().id, variables('namingInfix'))), '-nsg')]",
      "loadBalancerName": "[concat(variables('namingInfix'), 'lb')]",
      "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
      "natPoolName": "[concat(variables('namingInfix'), 'natpool')]",
      "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
      "natStartPort": 50000,
      "natEndPort": 50119,
      "natBackendPort": 22,
      "ProdnicName": "[concat(variables('namingInfix'), '-prod-nic')]",
      "MgtnicName": "[concat(variables('namingInfix'), '-mgmt-nic')]",
      "MgtIPConfigName": "[concat(variables('namingInfix'), '-ipconfig')]",
      "ProdIPConfigName": "[concat(variables('namingInfix'), '-ipconfig')]",
      "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      },
      "imageReference": "[variables('osType')]",

      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-04-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('longNamingInfix')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-04-01",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "[variables('publicIPAddressID')]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[variables('bePoolName')]"
            }
          ],
          "inboundNatPools": [
            {
              "name": "[variables('natPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('frontEndIPConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": "[variables('natStartPort')]",
                "frontendPortRangeEnd": "[variables('natEndPort')]",
                "backendPort": "[variables('natBackendPort')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('nsgName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "priority": 300,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            },
            {
              "name": "HTTPS",
              "properties": {
                "priority": 320,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "443"
              }
            },
            {
              "name": "HTTP",
              "properties": {
                "priority": 340,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "80"
              }
            }
          ]
        },
        "tags": {}
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[variables('namingInfix')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
        ],
        "sku": {
          "name": "[variables('vmSize')]",
          "tier": "Standard",
          "capacity": "[parameters('instanceCount')]"
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": "[variables('imageReference')]"
            },
            "osProfile": {
              "computerNamePrefix": "[variables('namingInfix')]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPasswordOrKey')]",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {"name": "[variables('MgtnicName')]",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[variables('MgtIPConfigName')]",
                        "properties": {
                          "subnet": {"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('MgtSubnetName'))]"},
                          "networkSecurityGroup": {"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"}
                        }
                      }
                    ]
                  }
                },
                {"name": "[variables('ProdnicName')]",
                  "properties": {
                    "primary": false,
                    "ipConfigurations": [
                      {
                        "name": "[variables('ProdIPConfigName')]",
                        "properties": {
                          "subnet": {"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('ProdSubnetName'))]"},
                          "loadBalancerBackendAddressPools": [{"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"}],
                          "loadBalancerInboundNatPools": [{"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"}],
                          "networkSecurityGroup": {"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"}
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },

      {
        "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
        "name": "[concat(variables('namingInfix'),'/newuserscript')]",
        "apiVersion": "2020-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": ["[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.1",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
            "fileUris": [
                     "https://raw.githubusercontent.com/fchmainy/arm-nginx-vmss/main/terraform/scripts/install-and-onboard.sh",
                     "https://raw.githubusercontent.com/fchmainy/arm-nginx-vmss/main/scripts/nginx.conf",
                     "https://raw.githubusercontent.com/fchmainy/arm-nginx-vmss/main/scripts/gateways.json"
            ],
            "commandToExecute": "[concat('sh install-and-onboard.sh ', ' ', parameters('ControllerIP'), ' ', parameters('nginx-repo.crt'), ' ', parameters('nginx-repo.key'), ' ', parameters('instanceLocation'), ' ', parameters('gateway'), ' ', parameters('ctrlUserEmail'), ' ', parameters('ctrlUserPassword'), ' ', parameters('environment'))]"
          }
        }
      }
    ]
}
